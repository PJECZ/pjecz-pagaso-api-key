{
  "FastAPI paths": {
    "scope": "python",
    "prefix": "fpaths",
    "body": [
      "\"\"\"",
      "${1:Modulos} v2, rutas (paths)",
      "\"\"\"",
      "from fastapi import APIRouter, Depends, HTTPException, status",
      "from fastapi_pagination.ext.sqlalchemy import paginate",
      "from sqlalchemy.orm import Session",
      "",
      "from lib.database import get_db",
      "from lib.exceptions import CitasAnyError",
      "from lib.fastapi_pagination_custom_page import CustomPage, custom_page_success_false",
      "",
      "from .crud import get_${2:blueprint}, get_${3:singular}",
      "from .schemas import ${4:EsquemaOut}, One${4:EsquemaOut}",
      "from ..permisos.models import Permiso",
      "from ..usuarios.authentications import get_current_active_user",
      "from ..usuarios.schemas import UsuarioInDB",
      "",
      "${2:blueprint} = APIRouter(prefix=\"/v2/${2:blueprint}\", tags=[\"${5:categoria}\"])",
      "",
      "",
      "@${2:blueprint}.get(\"\", response_model=CustomPage[${4:EsquemaOut}])",
      "async def listado_${2:blueprint}(",
      "\tcurrent_user: UsuarioInDB = Depends(get_current_active_user),",
      "\tdb: Session = Depends(get_db),",
      "):",
      "\t\"\"\"Listado de ${6:comentario}\"\"\"",
      "\tif current_user.permissions.get(\"${7:MODULO}\", 0) < Permiso.VER:",
      "\t\traise HTTPException(status_code=status.HTTP_403_FORBIDDEN, detail=\"Forbidden\")",
      "\ttry:",
      "\t\tresultados = get_${2:blueprint}(db)",
      "\texcept CitasAnyError as error:",
      "\t\treturn custom_page_success_false(error)",
      "\treturn paginate(resultados)",
      "",
      "",
      "@${2:blueprint}.get(\"/{${3:singular}_id}\", response_model=One${4:EsquemaOut})",
      "async def detalle_${3:singular}(",
      "\t${3:singular}_id: int,",
      "\tcurrent_user: UsuarioInDB = Depends(get_current_active_user),",
      "\tdb: Session = Depends(get_db),",
      "):",
      "\t\"\"\"Detalle de una ${6:comentario} a partir de su id\"\"\"",
      "\tif current_user.permissions.get(\"${7:MODULO}\", 0) < Permiso.VER:",
      "\t\traise HTTPException(status_code=status.HTTP_403_FORBIDDEN, detail=\"Forbidden\")",
      "\ttry:",
      "\t\t${3:singular} = get_${3:singular}(db, ${3:singular}_id=${3:singular}_id)",
      "\texcept CitasAnyError as error:",
      "\t\treturn One${4:EsquemaOut}(success=False, message=str(error))",
      "\treturn One${4:EsquemaOut}.from_orm(${3:singular})",
      ""
    ],
    "description": "Contenido para paths.py"
  }
}
